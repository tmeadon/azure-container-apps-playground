@using Dapr.Client
@using System.Net.Http
@using System.Text.Json
@page "/"

<h1>Hello, world!</h1>

Welcome to your new app.

<p>
Data retrieved from backend:

<ul>
    @foreach (var item in names)
    {
        <li>@item</li>
    }
</ul>
</p>

<br>
<br>

<input @bind="newName"/>
<button @onclick="UpdateNamesInBackendAsync">Post to backend</button>

@code {

    private IEnumerable<string> names = new List<string>();
    private DaprClient daprClient;
    private string newName;

    protected override async Task OnInitializedAsync()
    {
        daprClient = new DaprClientBuilder().Build();
        await GetNamesFromBackendAsync();
    }

    private async Task GetNamesFromBackendAsync()
    {
        try
        {
            var request = daprClient.CreateInvokeMethodRequest(HttpMethod.Get, "backend", "");
            var response = await daprClient.InvokeMethodWithResponseAsync(request);
            var responseString = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Received response {responseString} from backend");
            names = JsonSerializer.Deserialize<List<string>>(responseString);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    private async Task UpdateNamesInBackendAsync()
    {
        if (!string.IsNullOrEmpty(newName))
        {
            var newList = new List<string>();
            newList.AddRange(names);
            newList.Add(newName);
            Console.WriteLine($"Sending following new list to backend: {string.Join(", ", newList)}");
            var request = daprClient.CreateInvokeMethodRequest<IEnumerable<string>>(HttpMethod.Post, "backend", "", newList);
            await daprClient.InvokeMethodAsync(request);
            newName = "";
            await GetNamesFromBackendAsync();
        }
    }
}
